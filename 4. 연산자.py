print(1+1) # print는 출력을 위한 명령문이고 1+1 = "2" 출력
print(3-2) # print는 출력을 위한 명령문이고 3-2 = "1" 출력
print(2*5) # print는 출력을 위한 명령문이고 2 곱하기 5 = "10" 출력
print(6/3) # print는 출력을 위한 명령문이고 6 나누기 3 = "2.0" 출력

print(2**3) # print는 출력을 위한 명령문이고 2의 3제곱 = "8" 출력
print(5%3) # print는 출력을 위한 명령문이고 5 를 3으로 나눈 나머지 = "2" 출력
print(10%3) # print는 출력을 위한 명령문이고 10 를 3으로 나눈 나머지 = "1" 출력
print(5//3) # print는 출력을 위한 명령문이고 5 를 3으로 나눈 몫 = "1" 출력
print(10//3) # print는 출력을 위한 명령문이고 10 를 3으로 나눈 몫 = "3" 출력

print(10 > 3) # print는 출력을 위한 명령문이고 10 은 3보다 크므로 True 출력
print(4 >= 7) # print는 출력을 위한 명령문이고 4는 7보다 작거나 같지않으므로 False 출력
print(10 < 3) # print는 출력을 위한 명령문이고 3이 10보다 크지않으므로 False 출력
print(5 <= 5) # print는 출력을 위한 명령문이고 5는 5보다 같거나 작으므로 True 출력
print(3 == 3) # print는 출력을 위한 명령문이고 앞에 값과 뒤에 값이 같은지를 확인, True 출력
print(4 == 2) # print는 출력을 위한 명령문이고 앞에 값과 뒤에 값이 같은지를 확인, False 출력
print(3 + 4 == 7) # print는 출력을 위한 명령문이고 앞에 값과 뒤에 값이 같은지를 확인, True 출력

print(1 != 3)  # print는 출력을 위한 명령문이고 앞에 값과 뒤에 값이 같지 않은것을 확인, True 출력
print(not(1 != 3))  # print는 출력을 위한 명령문이고 not(True)이므로, False 출력

print((3 > 0) and (3 < 5)) # print는 출력을 위한 명령문이고 and문은 앞, 뒤에 값이 모두 성립하여야 함, True 출력
print((3 > 0) & (3 < 5)) # print는 출력을 위한 명령문이고 & 기호도 같이 사용가능 True 출력

print((3 > 0) or (3 > 5)) # print는 출력을 위한 명령문이고 or문은 앞 이나 뒤 한개라도 True일시 true 출력, True 출력
print((3 > 0) | (3 > 5))# print는 출력을 위한 명령문이고 | 기호도 같이 사용가능, True 출력

print(5 > 4 > 3) # print는 출력을 위한 명령문이고, True 출력
print(5 > 4 > 7) # print는 출력을 위한 명령문이고, 4는 7보다 크지않으므로 False 출력
